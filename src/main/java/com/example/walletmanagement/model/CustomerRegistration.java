package com.example.walletmanagement.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

import java.time.LocalDate;
import java.util.List;
import java.util.Set;
import java.util.UUID;

@Data
@AllArgsConstructor
@NoArgsConstructor
@ToString
@Entity
@Table(name = "customer_registration")
public class CustomerRegistration {
    @Id
    private String customerType;
    @Column(nullable = true)
    private String   customer_ID;
    @Column(nullable = true)
    private String lE_Book;
    // generated by random
    //private String customer_ID;
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    @Column(nullable = true)
   // @JoinColumn(name = "salutation_list")
    private List<Salutation> salutation;
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    @Column(nullable = true, name = "nationalIdTYPe")
    //@JoinColumn(name = "nationId_category")

    private List<National_ID_Type> national_ID_Type;
    @Column(nullable = true,name = "nationalIdNumber")
    private String national_ID_Number;
    @Column(nullable = true,name = "customerName")
    private String customer_Name;
    @Column(nullable = true,name = "surname")
    private String surname;
    @Column(nullable = true,name = "forename1")
    private String forename_1;
    @Column(nullable = true, name = "forename2")
    private String forename_2;
    @Column(nullable = true, name = "customerAcronym")
    private String customer_Acronym;
    @Column(nullable = true, name = "visionOuc")
    private String vision_OUC;
    @Column(nullable = true , name = "visionSbu")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "vision_sbu_list")
    private List<Vision_SBU> vision_SBU;
    @Column(nullable = true, name = "customerOpenDate")
    private String customer_Open_Date;
    @Column(nullable = true, name = "customerGender")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "customerGender_list")
    private List<Customer_Gender> customer_Gender;
    @Column(nullable = true,name = "dob")
    private LocalDate date_of_Birth;
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "country_birth")
    @Column(name = "placeOfBirth")
    private List<Country> place_of_Birth;
    @Column(nullable = true, name = "maritalStatusList")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "maritalStatus_list")
    private List<Marital_Status> marital_Status;
    @Column(nullable = true,name = "spouseName")
    private String spouse_Name;
    @Column(nullable = true, name = "socialEconomicList")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "socialEconomic_list")
    private List<Social_Economic_Class> social_Economic_Class;
    @Column(nullable = true, name = "nextOfKinName")
    private String next_of_kin_Name;
    @Column(nullable = true,name = "nextOfKinIdType")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "next_of_kin_ID_Type")
    private List<National_ID_Type> next_of_kin_ID_Type;
    @Column(nullable = true, name = "nextOfKinIdNumber")
    private String next_of_kin_ID_Number;
    @Column(nullable = true,name = "nextOfKinTelphone")
    private String next_of_kin_Telephone;
    @Column(nullable = true, name = "nextOfKinEmailId")
    private String next_of_kin_Email_ID;
    @Column(nullable = true, name = "numberOfDependants")
    private String number_Of_Dependants;
    @Column(nullable = true,name = "nationality")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "nationality_list")
    private List<Country> nationality;
    @Column(nullable = true, name = "resident")
    private String residence;
    @Column(nullable = true, name = "commAddress2")
    private String comm_Address_2;
    @Column(nullable = true, name = "province")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "province_list")
    private List<Province> province;
    @Column(nullable = true, name = "district")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "district_list")
    private List<District> district;
    @Column(nullable = true, name = "sector")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "sector_list")
    private List<Sector> sector;
    @Column(nullable = true,name = "cell")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "cell_list")
    private List<Cell> cell;
    @Column(nullable = true,name = "commAddressVillage")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "village_list")
    private List<Village> comm_Address_village;
    @Column(nullable = true, name = "commCounty")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "Country_list")
    private List<Country> comm_Country;
    @Column(nullable = true, name = "commResidenceType")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "country_list")
    private List<Country> comm_Residence_Type;
    @Column(nullable = true, name = "permAddress1")
    private String perm_Address_1;
    @Column(nullable = true,name = "permAddress2")
    private String perm_Address_2;
    @Column(nullable = true, name = "permProvinceId")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "province_list")
    private List<Province> perm_province_id;
    @Column(nullable = true, name = "permDistrict")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "district_list")
    private List<District> perm_district;
    @Column(nullable = true, name = "permSector")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "sector_list")
    private List<Sector> perm_sector;
    @Column(nullable = true, name = "permCell")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "cell_list")
    private List<Cell> perm_cell;
    @Column(nullable = true, name = "permVillage")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "village_list")
    private List<Village> perm_Village;
    @Column(nullable = true, name = "permCountry")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "country_list")
    private List<Country> perm_Country;
    @Column(nullable = true,name = "emailId")
    private String email_ID;
    @Column(nullable = true,name = "workTelephone")
    private String work_Telephone;
    @Column(nullable = true, name = "homeTelephone")
    private String home_Telephone;
    @Column(nullable = true, name = "faxNumber1")
    private String fax_Number_1;
    @Column(nullable = true, name = "faxNumber2")
    private String fax_Number_2;
    @Column(nullable = true, name = "education")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "edicaton_list")
    private List<Education> education;
    @Column(nullable = true, name = "customerTin")
    private String customer_TIN;
    @Column(nullable = true, name = "naicsCode")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "naics_code_list")
    private List<NAICS_Code> nAICS_Code;
    @Column(nullable = true, name = "economicSubSectorCodeIsic")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "economic_Sub_Sector_Code_ISIC")
    private List<Economic_Sub_Sector_Code_ISIC> economic_Sub_Sector_Code_ISIC;
    @Column(nullable = true, name = "relatedPartyList")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "related_party_list")
    private List<Related_Party> related_Party;
    @Column(nullable = true, name = "relationshipType")
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "relationship_type_list")
    private List<Relationship_Type> relationship_Type;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
   // @JoinColumn(name = "related_Party_Name")
    private List<Related_Party> related_Party_Name;
    @Column(nullable = true)
    private String sSN_Number;
    @Column(nullable = true)
    private String health_Insurance_Number;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "occupation_Name")
    private List<Occupation> occupation;
    @Column(nullable = true)
    private String employer_Name;
    @Column(nullable = true)
    private String employee_ID;
    @Column(nullable = true)
    private String emp_Address_1;
    @Column(nullable = true)
    private String emp_Address_2;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "country_Name")
    private List<Country> emp_Country;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "province_list")
    private List<Province> emp_province;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "district_list")
    private List<District> emp_district;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "sector_list")
    private List<Sector> emp_sector;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "cell_list")
    private List<Cell> emp_cell;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "village_list")
    private List<Village> emp_Village;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "income_list")
    private List<Income> income;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "income_frequency")
    private List<IncomeFrequency> income_Frequency;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "legal_status")
    private List<Legal_Status> legal_Status;
    @Column(nullable = true)
    @OneToMany(mappedBy = "customerRegistration",cascade = CascadeType.ALL,orphanRemoval = true)
    //@JoinColumn(name = "customer_status")
    private List<Customer_Status> customer_Status;
    @Column(nullable = true)
    private LocalDate date_Last_Modified;

    /*
     ublic Customer(String name) {
        this.customerId = "Cust" + UUID.randomUUID().toString().substring(0, 7);
        this.name = name;
     */
}
