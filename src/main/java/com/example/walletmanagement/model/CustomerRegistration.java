package com.example.walletmanagement.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

import java.time.LocalDate;
import java.util.List;

@Data
@AllArgsConstructor
@NoArgsConstructor
@ToString
@Entity
public class CustomerRegistration {
    @Id
    private String customerType;
    private String lE_Book;
    // generated by random
    private String customer_ID;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Salutation.class)
    @JoinColumn(name = "salutation_list")
    private List<Salutation> salutation;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = National_ID_Type.class)
    @JoinColumn(name = "nationId_category")
    private List<National_ID_Type> national_ID_Type;
    private String national_ID_Number;
    private String customer_Name;
    private String surname;
    private String forename_1;
    private String forename_2;
    private String customer_Acronym;
    private String vision_OUC;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Vision_SBU.class)
    @JoinColumn(name = "vision_sbu_list")
    private List<Vision_SBU> vision_SBU;
    private String customer_Open_Date;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Customer_Gender.class)
    @JoinColumn(name = "customerGender_list")
    private List<Customer_Gender> customer_Gender;
    private LocalDate date_of_Birth;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Country.class)
    @JoinColumn(name = "country_birth")
    private List<Country> place_of_Birth;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Marital_Status.class)
    @JoinColumn(name = "maritalStatus_list")
    private List<Marital_Status> marital_Status;
    private String spouse_Name;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Social_Economic_Class.class)
    @JoinColumn(name = "socialEconomic_list")
    private List<Social_Economic_Class> social_Economic_Class;
    private String next_of_kin_Name;
    @OneToMany(cascade = CascadeType.ALL)
    @JoinColumn(name = "next_of_kin_ID_Type")
    private List<National_ID_Type> next_of_kin_ID_Type;
    private String next_of_kin_ID_Number;
    private String next_of_kin_Telephone;
    private String next_of_kin_Email_ID;
    private String number_Of_Dependants;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Country.class)
    @JoinColumn(name = "nationality_list")
    private List<Country> nationality;
    private String residence;
    private String comm_Address_2;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Province.class)
    @JoinColumn(name = "province_list")
    private List<Province> province;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = District.class)
    @JoinColumn(name = "district_list")
    private List<District> district;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Sector.class)
    @JoinColumn(name = "sector_list")
    private List<Sector> sector;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Cell.class)
    @JoinColumn(name = "cell_list")
    private List<Cell> cell;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Village.class)
    @JoinColumn(name = "village_list")
    private List<Village> comm_Address_village;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Country.class)
    @JoinColumn(name = "Country_list")
    private List<Country> comm_Country;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Country.class)
    @JoinColumn(name = "country_list")
    private List<Country> comm_Residence_Type;
    private String perm_Address_1;
    private String perm_Address_2;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Province.class)
    @JoinColumn(name = "province_list")
    private List<Province> perm_province_id;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = District.class)
    @JoinColumn(name = "district_list")
    private List<District> perm_district;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Sector.class)
    @JoinColumn(name = "sector_list")
    private List<Sector> perm_sector;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Cell.class)
    @JoinColumn(name = "cell_list")
    private List<Cell> perm_cell;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Village.class)
    @JoinColumn(name = "village_list")
    private List<Village> perm_Village;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Country.class)
    @JoinColumn(name = "country_list")
    private List<Country> perm_Country;
    private String email_ID;
    private String work_Telephone;
    private String home_Telephone;
    private String fax_Number_1;
    private String fax_Number_2;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Education.class)
    @JoinColumn(name = "edicaton_list")
    private List<Education> education;
    private String customer_TIN;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = NAICS_Code.class)
    @JoinColumn(name = "naics_code_list")
    private List<NAICS_Code> nAICS_Code;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Economic_Sub_Sector_Code_ISIC.class)
    @JoinColumn(name = "economic_Sub_Sector_Code_ISIC")
    private List<Economic_Sub_Sector_Code_ISIC> economic_Sub_Sector_Code_ISIC;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Related_Party.class)
    @JoinColumn(name = "related_party_list")
    private List<Related_Party> related_Party;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Relationship_Type.class)
    @JoinColumn(name = "relationship_type_list")
    private List<Relationship_Type> relationship_Type;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Related_Party.class)
    @JoinColumn(name = "related_Party_Name")
    private List<Related_Party> related_Party_Name;
    private String sSN_Number;
    private String health_Insurance_Number;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Occupation.class)
    @JoinColumn(name = "occupation_Name")
    private List<Occupation> occupation;
    private String employer_Name;
    private String employee_ID;
    private String emp_Address_1;
    private String emp_Address_2;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Country.class)
    @JoinColumn(name = "country_Name")
    private List<Country> emp_Country;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Province.class)
    @JoinColumn(name = "province_list")
    private List<Province> emp_province;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = District.class)
    @JoinColumn(name = "district_list")
    private List<District> emp_district;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Sector.class)
    @JoinColumn(name = "sector_list")
    private List<Sector> emp_sector;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Cell.class)
    @JoinColumn(name = "cell_list")
    private List<Cell> emp_cell;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Village.class)
    @JoinColumn(name = "village_list")
    private List<Village> emp_Village;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Income.class)
    @JoinColumn(name = "income_list")
    private List<Income> income;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = IncomeFrequency.class)
    @JoinColumn(name = "income_frequency")
    private List<IncomeFrequency> income_Frequency;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Legal_Status.class)
    @JoinColumn(name = "legal_status")
    private List<Legal_Status> legal_Status;
    @OneToMany(cascade = CascadeType.ALL, targetEntity = Customer_Status.class)
    @JoinColumn(name = "customer_status")
    private List<Customer_Status> customer_Status;
    private LocalDate date_Last_Modified;
}
